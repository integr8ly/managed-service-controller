# Required permissions to deploy Integration Controller
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: integration-update
rules:
- apiGroups:
  - integreatly.org
  resources:
  - integrations
  verbs:
  - update
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  generateName: default-account-managed-service-controller-integration-update-
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-update
subjects:
- kind: ServiceAccount
  name: default
  namespace: ${NAMESPACE}
---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: managed-service-controller-integration-admin
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  verbs:
  - create"
  - get
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - deletecollection
---

# Integration controller permissions. managed-service-controller needs these permissions at the cluster level to be able to grant them to each controller.
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: integration-controller
rules:
- apiGroups:
  - integreatly.org
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - "*"
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - "*"
- apiGroups:
  - syndesis.io
  resources:
  - "*"
  verbs:
  - "*"
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: managed-services-integration-grant-perms-
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-controller
subjects:
- kind: ServiceAccount
  name: default
  namespace: ${NAMESPACE}
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  generateName: managed-service-controller-enmasse-view-
roleRef:
  kind: ClusterRole
  name: enmasse-integration-viewer
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: default
  namespace: ${NAMESPACE}
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  generateName: managed-service-controller-route-viewer-
roleRef:
  kind: ClusterRole
  name: route-service-viewer
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: default
  namespace: ${NAMESPACE}